<?php

function vsite_score_radioactivity_info() {
  $q = db_query('SELECT type, name FROM {node_type}');
  $types = array();
  while ($node_type = db_fetch_object($q)) {
    $types[$node_type->type.'_create'] = array(
      'title_placeholder' => 'Create '.$node_type->name,
      'description' => 'Energy added to this vsite when a '.$node_type->name.' is created.',
    );
  }

  return array (
    'targets' => array(
      'vsite' => array(),
    ),
    'sources' => array(
      'vsite' => $types,
    ),
  );
}

/**
 * Impelementation of hook_nodeapi().
 * Update the vsite's energy to include a new node's.
 */
function vsite_score_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'insert':

      if (is_array($node->og_groups)) {
        foreach ($node->og_groups as $og) {
          radioactivity_add_energy($og, 'vsite', $node->type.'_create');
        }
      }
    break;
  }
}

/**
 * Implementation of hook_views_api().
 */
function vsite_score_views_api() {
  return array(
    'api' => 2,
  );
}

function vsite_score_recalculate() {
  // gets a score for everyone

  // get a list of all vsites
  $q = db_query("SELECT nid, title FROM {og} INNER JOIN {node} USING (nid)");
  $vsites = array();
  while ($r = db_fetch_array($q)) {
    // get a score for them
    $totals = array();
    $q_count = db_query("SELECT type, COUNT(*) AS count FROM node AS vs_n INNER JOIN og_ancestry AS vs_og USING (nid) WHERE group_nid = %d GROUP BY vs_n.type", $r['nid']);
    while ($r_count = mysql_fetch_array($q_count)) {
      foreach (radioactivity_get_energies_for_source(0, 'vsite', $r['type'].'_create') as $dp_id => $score) {
        $totals[$dp_id] += $score * $r['count'];
      }
    }
    $vsites[$r['nid']] = array('title' => $r['title']);
    foreach ($totals as $dp_id => $score) {
      $vsites[$r['nid']]['dp_'.$dp_id] = $score;
    }
  }

  return $vsites;
}