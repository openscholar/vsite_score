<?php

function vsite_score_menu() {
  $menu = array();
  $menu['score'] = array(
    'title' => 'Vsite Score',
    'page callback' => 'vsite_score_page',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );
  return $menu;
}

function vsite_score_radioactivity_info() {
  $q = db_query('SELECT type, name FROM {node_type}');
  $types = array();
  while ($node_type = db_fetch_object($q)) {
    $types[$node_type->type.'_create'] = array(
      'title_placeholder' => $node_type->name.' Create',
      'description' => 'Energy added to this vsite when a '.$node_type->name.' is created.',
    );
  }

  return array (
    'targets' => array(
      'vsite' => array(),
    ),
    'sources' => array(
      'vsite' => $types,
    ),
  );
}

function vsite_score_page() {
  $vsite = vsite_get_vsite();

  $q = db_query("SELECT nid, (SELECT SUM(energy) FROM {radioactivity}
  														INNER JOIN {node} ON id = nid
  														INNER JOIN {og_ancestry} USING (nid)
  														WHERE group_nid = n.nid) AS score
  							FROM {node} AS n WHERE type = 'vsite' ORDER BY score DESC LIMIT 5");

  $s = '<pre>';
  while ($r = db_fetch_array($q)) {
   // $s .= print_r($r,1);
  }
  $s .= print_r(radioactivity_get_decay_profiles(),1);
  $s .= '</pre>';
  return $s;
}

/**
 * Implementation of hook_views_api().
 */
function vsite_score_views_api() {
  return array(
    'api' => 2,
  );
}

function vsite_score_views_handlers() {
  return array (
    'handlers' => array (
      'vsite_score_handler_sort_total_score' => array (
        'parent' => 'views_handlers_sort',
      ),
    ),
  );
}

/**
 * Impelementation of hook_nodeapi().
 * Update the vsite's energy to include a new node's.
 */
function vsite_score_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'insert':
      /*
      $q = db_query('SELECT SUM(energy) AS total_energy FROM {radioactivity}
  														INNER JOIN {node} ON id = nid
  														INNER JOIN {og_ancestry} USING (nid)
  														WHERE group_nid = %d GROUP BY decay_profile', key($node->og_groups));

      while ($r = db_fetch_array($q)) {
        $energy = array(
          'id' => key($node->og_groups),
          'class' => 'node',
          'decay_profile' => $r['decay_profile'],
          'energy' => $r['total_energy'],
        );
        $energy = (object) $energy;
        drupal_write_record('radioactivity', $energy, 'id');
      } */

      // the other option is digging through decay profiles manually,
      // looking for the exact energy for adding a node type and adding that
      // to the vsite's energy.

      // or, adding a new type that sets the radioactivity for creation events straight to vsite

      if (is_array($node->og_groups)) {
        foreach ($node->og_groups as $og) {
          radioactivity_add_energy($og, 'vsite', $node->type.'_create');
        }
      }
    break;
    case 'view':
      print_r($node);
      // group = key($node->og->groups);
    break;
    case 'load':

    break;
  }
}